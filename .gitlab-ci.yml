image: mambaorg/micromamba

stages:
  - test
  - coverage
  - deploy

variables:
  MAMBA_ROOT_PREFIX: ${CI_PROJECT_DIR}/mamba_root
  MAMBA_SKIP_ACTIVATE: 1
  # Cannot activate the environment if the root prefix is off

.pythonVersions:
  parallel:
    matrix:
      - PYTHON_VERSION: [ "3.12", "3.11", "3.10"]
  maxVersion:
    matrix:
      - PYTHON_VERSION: [ "3.12" ]

before_script:
  - mkdir -p ${MAMBA_ROOT_PREFIX}
  - eval "$(micromamba shell hook --shell bash)"
  - micromamba activate ${MAMBA_ROOT_PREFIX}
  - micromamba install -y -n base -c conda-forge python=${PYTHON_VERSION} -f requirements.txt

test:
  stage: test
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      changes:
        - infomeasure/**
        - tests/**
        - pyproject.toml
        - requirements.txt
    - if: $CI_PIPELINE_SOURCE == "schedule"
  parallel: !reference [ .pythonVersions,parallel ]
  script:
    - micromamba list
    - pytest tests/

# coverage report - for merge requests and main branch
coverage:
  stage: coverage
  coverage: /^TOTAL.+?(\d+\%)$/
  needs: []
  rules:
    - changes:
      - infomeasure/**
      - tests/**
      - pyproject.toml
      - requirements.txt
  script:
    - pytest --cov --cov-report term

# build documentation to gitlab pages, only on main branch
pages:
  stage: deploy
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  script:
    - sphinx-apidoc -o docs/api/ infomeasure/ -f
    - sphinx-build docs/ public -b dirhtml
  artifacts:
    paths:
      - public
  environment:
    name: production
    url: https://${CI_PROJECT_NAMESPACE}.pages.ifisc.uib-csic.es/${CI_PROJECT_NAME}
